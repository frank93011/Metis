version: '3.7'
 
services: 
  drone-server:
    image: drone/drone:1
    ports:
      - 5001:80
    volumes:
      # 設定本機的 Database 目錄存放 drone 服務相關資料
      - ./Database/drone:/data
    environment:
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
      # - DRONE_USER_FILTER=${DRONE_USER_FILTER}
 
      # GitHub Config
      - DRONE_GITHUB_SERVER=https://github.com
 
      # 至 github OAuth Application 申請、取得 id 與 secret
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
 
      # deubgu 時可以拿掉下面三個註解
      # - DRONE_LOGS_DEBUG=true
      # - DRONE_LOGS_PRETTY=true
      # - DRONE_LOGS_COLOR=true
    networks:
      - app_net
 
  drone-runner:
    image: drone/drone-runner-docker:1
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure
    environment:
      - DRONE_RPC_HOST=${DRONE_RPC_HOST}
      - DRONE_RPC_PROTO=${DRONE_RPC_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=1
    networks:
      - app_net
 
networks:
  app_net:
    driver: "bridge"